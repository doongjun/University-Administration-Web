<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.metanet.university.mapper.MemberMapper">
	
	<select id="selectMemberByCode" resultType="kr.co.metanet.university.domain.Member">
		SELECT m.ID, m.CODE, m.PASSWORD, m.NAME, mr.ROLE_NAME, m.CREATE_DATE, m.MODIFY_DATE 
		FROM MEMBER_ROLE mr 
		JOIN "MEMBER" m ON mr.MEMBER_ID = m.ID 
		WHERE m.CODE = #{code}
	</select>
	
	<select id="selectStudentByCode" resultType="kr.co.metanet.university.domain.MemberStudent">
		SELECT m.ID, m.NAME, mr.ROLE_NAME, m.code, m.PASSWORD, d.DEPARTMENT_NAME, s.GRADE, s.BIRTHDAY, s.ACADEMIC_STATUS, s.ADMISSION_DATE, s.EMAIL, s.PHONE 
		FROM MEMBER_ROLE mr 
		JOIN "MEMBER" m ON mr.MEMBER_ID = m.ID
		JOIN STUDENT s ON m.CODE = s.CODE 
		JOIN DEPARTMENT d ON s.DEPARTMENT_CODE = d.DEPARTMENT_CODE 
		WHERE m.CODE = #{code}
	</select>
	
	<select id="selectStudentList" resultType="kr.co.metanet.university.domain.MemberStudent">
		SELECT m.ID, m.NAME, mr.ROLE_NAME, m.code, m.PASSWORD, d.DEPARTMENT_NAME, s.GRADE, s.BIRTHDAY, s.ACADEMIC_STATUS, s.ADMISSION_DATE, s.EMAIL, s.PHONE 
		FROM MEMBER_ROLE mr 
		JOIN "MEMBER" m ON mr.MEMBER_ID = m.ID
		JOIN STUDENT s ON m.CODE = s.CODE 
		JOIN DEPARTMENT d ON s.DEPARTMENT_CODE = d.DEPARTMENT_CODE
	</select>
	
	<select id="selectProfessorByCode" resultType="kr.co.metanet.university.domain.MemberProfessor">
		SELECT m.id, m.NAME, mr.ROLE_NAME, m.CODE, m.PASSWORD, d.DEPARTMENT_NAME, p.BIRTHDAY, p.EMAIL, p.PHONE, p."DEGREE" 
		FROM MEMBER_ROLE mr 
		JOIN "MEMBER" m ON mr.MEMBER_ID = m.ID
		JOIN PROFESSOR p ON m.CODE = p.CODE 
		JOIN DEPARTMENT d ON p.DEPARTMENT_CODE = d.DEPARTMENT_CODE 
		WHERE p.CODE = #{code}
	</select>
	
	<select id="selectAdminByCode" resultType="kr.co.metanet.university.domain.MemberAdmin">
		SELECT m.ID, m.NAME, mr.ROLE_NAME, m.CODE, m.PASSWORD, a."POSITION", a.EMAIL, a.PHONE, a.DIVISION 
		FROM MEMBER_ROLE mr 
		JOIN "MEMBER" m ON mr.MEMBER_ID = m.ID
		JOIN ADMIN a ON m.CODE = a.CODE 
		WHERE a.CODE = #{code}
	</select>
	
	<update id="updatePassword" parameterType="java.util.Map">
		UPDATE MEMBER 
		SET PASSWORD = #{password} 
		WHERE code = #{code}
	</update>
	
	
	<update id="updateStudentInfo" parameterType="java.util.Map">
		UPDATE STUDENT 
		SET EMAIL = #{email},
			PHONE = #{phone}
		WHERE code = #{code}
	</update>
	
	<update id="updateProfessorInfo" parameterType="java.util.Map">
		UPDATE PROFESSOR 
		SET EMAIL = #{email},
			PHONE = #{phone}
		WHERE code = #{code}
	</update>
	
	<update id="updateAdminInfo" parameterType="java.util.Map">
		UPDATE ADMIN
		SET EMAIL = #{email},
			PHONE = #{phone},
			"POSITION" = #{position},
			DIVISION = #{division}
		WHERE code = #{code}
	</update>
	
	<select id="selectUserCount" resultType="int">
		SELECT count(*) 
		FROM "MEMBER" 
		WHERE CODE = #{code}
	</select>
	
	<!-- 추가 로직 시작 -->
	<!-- 유저 추가 -->
	<insert id="insertMember" parameterType="java.util.Map">
		<selectKey keyProperty="createdKey" resultType="int" order="AFTER">
			select SEQ_ID.CURRVAL FROM DUAL
		</selectKey>
		INSERT INTO "MEMBER" 
		VALUES (SEQ_ID.nextval, #{name}, #{code}, #{password}, sysdate, sysdate)
	</insert>
	
	<!-- 유저 Role 추가 -->
	<insert id="insertMemberRole" parameterType="java.util.Map">
		INSERT INTO MEMBER_ROLE 
		VALUES (SEQ_ID.nextval, #{memberId}, #{roleName})
	</insert>
	
	<!-- 학생 추가 -->
	<insert id="insertStudent" parameterType="java.util.Map">
		INSERT INTO STUDENT 
		VALUES (SEQ_ID.nextval, #{code}, #{departmentCode}, #{grade}, #{birthday}, #{email}, #{phone}, #{academicStatus}, #{admissionDate})
	</insert>
	<!-- 추가 로직 끝 -->
	
	<!-- 수정 로직 시작 -->
	<!-- 유저 수정 -->
	<update id="editMember" parameterType="java.util.Map">
		UPDATE "MEMBER" 
		SET name = #{name}, code = #{code}
		WHERE code = #{conditionCode}
	</update>
	
	<!-- 학생 수정 -->
	<update id="editStudent" parameterType="java.util.Map">
		UPDATE STUDENT 
		SET code = #{code}, DEPARTMENT_CODE = #{departmentCode}, GRADE = #{grade}, BIRTHDAY = #{birthday}, EMAIL = #{email}, PHONE = #{phone}, ACADEMIC_STATUS = #{academicStatus}, ADMISSION_DATE = #{admissionDate}
		WHERE code = #{conditionCode}
	</update>
	<!-- 수정 로직 끝 -->
	
	<!-- 삭제 로직 시작 -->
	<!-- getKey -->
	<select id="selectMemberKey" resultType="int">
		SELECT id 
		FROM "MEMBER"
		WHERE code = #{code}
	</select>
	
	<!-- MemberRole 삭제 -->
	<delete id="deleteMemberRole">
		DELETE FROM MEMBER_ROLE
		WHERE MEMBER_ID = #{memberId}
	</delete>
	
	<!-- Member 삭제 -->
	<delete id="deleteMember">
		DELETE FROM "MEMBER"
		WHERE ID = #{memberId}
	</delete>
	
	<!-- Student 삭제 -->
	<delete id="deleteStudent">
		DELETE FROM STUDENT
		WHERE CODE = #{code}
	</delete>
	<!-- 삭제 로직 끝 -->
	
</mapper>

