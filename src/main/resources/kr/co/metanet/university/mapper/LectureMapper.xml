<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.metanet.university.mapper.LectureMapper">

	<select id="getAllLecture" resultType="kr.co.metanet.university.domain.LectureVO">
		<![CDATA[
			select *
			from (select rownum rn, id, lecture_code, lecture_name, professor_id, grade, classroom, division, lecture_time, lecture_year, semester, student_count, student_full, credit, section, dept_code, remarks, department_name
			      from (select l.id, l.lecture_code, l.lecture_name, l.professor_id, l.grade, l.classroom, l.division, l.lecture_time, l.lecture_year, l.semester, l.student_count, l.student_full, l.credit, l.section, l.dept_code, l.remarks, d.department_name
			            from lecture l, department d
			            where (division = '1분반' or division = '-') and (l.dept_code = d.department_code) ORDER BY lecture_code ASC)
			      where rownum <= (#{cri.pageNum}*#{cri.amount}))
			where rn > ((#{cri.pageNum}-1)*#{cri.amount})
		]]>
	</select>

	<select id="getNowALLLecture" parameterType="hashMap" resultType="kr.co.metanet.university.domain.LectureVO">
		SELECT * FROM LECTURE WHERE LECTURE_YEAR = #{lecture_year}, SEMESTER = #{semester} ORDER BY lecture_code ASC
	</select>

	<select id="getLecture" parameterType="int" resultType="kr.co.metanet.university.domain.LectureVO">
		SELECT * FROM LECTURE WHERE ID = #{id}
	</select>

	<select id="getMaxCode" resultType="String">
		SELECT NVL(MAX(LECTURE_CODE),'000001') FROM LECTURE
	</select>

	<select id="getPrevLectureList" parameterType="hashMap" resultType="kr.co.metanet.university.domain.LectureVO">
	<![CDATA[
		SELECT  distinct  l.lecture_code, l.lecture_name, l.professor_id, l.grade, l.classroom, l.division, l.lecture_time, l.lecture_year, l.semester, l.student_count, l.student_full, l.credit, l.section, l.dept_code, l.remarks
		FROM lecture l, student_lecture sl, student s
		WHERE  s.id =#{student_id} and s.id = sl.student_id and l.id = sl.lecture_id and( not l.semester =  #{semester}  and l.lecture_year = #{this_year} )
		or l.lecture_year <= #{last_year} 
		ORDER BY l.lecture_code ASC
		]]>
	</select>

	<select id="getSelectedPrevLectureList" parameterType="hashMap" resultType="kr.co.metanet.university.domain.LectureVO">
		SELECT distinct l.lecture_code, l.lecture_name, l.professor_id, l.grade, l.classroom, l.division, l.lecture_time,
		l.lecture_year, l.semester, l.student_count, l.student_full, l.credit, l.section,
		l.dept_code, l.remarks
		FROM lecture l, student_lecture sl, student s
		WHERE l.semester = #{semester} and l.lecture_year
		= #{lecture_year} and
		s.id = sl.student_id and l.id = sl.lecture_id
		and s.id = #{student_id}
		ORDER BY l.lecture_code ASC
	</select>

	<select id="getScoreList" parameterType="Map" resultType="kr.co.metanet.university.domain.StudentLectureVO">
		SELECT s.id, l.id, l.division, l.lecture_year, l.semester, l.section, l.credit, l.lecture_name, l.lecture_code, sl.midterm_exam,
		sl.final_exam, sl.assignment, sl.total, sl.attendance, sl.score,
		sl.total,sl.score
		FROM STUDENT S, STUDENT_LECTURE SL, lecture l
		WHERE s.id = sl.student_id and sl.lecture_id = l.id
		and s.id =
		#{student_id} and l.lecture_year = #{lecture_year} and l.semester = #{semester}
		ORDER BY l.id, l.lecture_name ASC
	</select>

	<insert id="create" parameterType="kr.co.metanet.university.domain.LectureVO">
		INSERT INTO
		LECTURE(LECTURE_CODE,LECTURE_NAME,PROFESSOR_ID,GRADE,CLASSROOM,DIVISION,LECTURE_TIME,LECTURE_YEAR,SEMESTER,STUDENT_COUNT,STUDENT_FULL,CREDIT,SECTION,DEPT_CODE,REMARKS)
		VALUES(#{lecture_code},#{lecture_name},#{professor_id},#{grade},#{classroom},#{division},#{lecture_time},#{lecture_year},#{semester},#{student_count},#{student_full},#{credit},#{section},#{dept_code},#{remarks})
	</insert>

	<update id="update" parameterType="kr.co.metanet.university.domain.LectureVO">
		UPDATE LECTURE
		SET LECTURE_NAME= #{lecture_name},GRADE= #{grade},CLASSROOM= #{classroom},DIVISION= #{division},LECTURE_TIME= #{lecture_time},STUDENT_FULL=
		#{student_full},CREDIT= #{credit},SECTION=
		#{section},DEPT_CODE= #{dept_code},REMARKS= #{remarks}
		WHERE ID = #{id}
	</update>

	<delete id="delete" parameterType="int">
		DELETE FROM LECTURE WHERE ID = #{id}
	</delete>


</mapper>

